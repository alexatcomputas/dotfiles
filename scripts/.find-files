#!/bin/bash

# Function: find-files
# Description: Recursively searches for files matching a given pattern within a specified directory depth.

# Arguments:
#   $1 (required): The search pattern (glob-style) for file names.
#   $2 (optional): The maximum depth for the recursive search (defaults to 1, the current directory).

# Usage:
#   find_files "*.txt"                # Find all .txt files in the current directory.
#   find_files "report*.pdf" 3        # Find all PDF files starting with "report" up to 3 levels deep.

# Output:
#   - Prints the executed 'find' command for transparency.
#   - Prints a "Searching..." message for user feedback.
#   - Lists the matching files (one per line), including their full paths.

# Notes:
#   - The search pattern uses glob-style matching, not regular expressions.
#   - The search is case-insensitive by default due to the '-iname' option.

function find-files {
    local search_pattern="$1"
    local path_depth=${2:-1}

    echo "find -L -maxdepth $path_depth -type f -iname '$search_pattern'"
    echo "Searching..."
    echo ""

    # Handle both single-dot and double-dot files with a combined pattern
    find -L -maxdepth "$path_depth" -type f \( -iname "$search_pattern" -o -name ".*" -o -name "..*" \) 
}

# Use the function:
# ex1: find-files ".*"
# ex2: find-files "file_name" 2
